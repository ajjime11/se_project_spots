!function(){"use strict";const e=(e,t,r)=>{const o=t.id+"-error";e.querySelector("#"+o).textContent="",t.classList.remove(r.inputErrorClass)},t=(e,t,o)=>{(e=>e.some(e=>!e.validity.valid))(e)?r(t,o):(t.disabled=!1,t.classList.remove(o.inactiveButtonClass))},r=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)},o=(t,o,n,a)=>{o.forEach(r=>{e(t,r,a)}),r(n,a)},n={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},a=new class{constructor({baseUrl:e,headers:t}){this._baseUrl=e,this._headers=t}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}_handleServerResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._handleServerResponse)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._handleServerResponse)}editUserInfo({name:e,about:t}){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._handleServerResponse)}editAvatarInfo({avatar:e}){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._handleServerResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._handleServerResponse)}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._handleServerResponse)}unlikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._handleServerResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"73b45784-19b2-4053-852d-56fa72f710be","Content-Type":"application/json"}}),s=document.querySelector(".cards__list"),c=document.querySelector("#card-template").content.querySelector(".card"),l=document.querySelector(".profile__name"),d=document.querySelector(".profile__description"),i=document.querySelector(".profile__avatar"),u=document.querySelector("#edit-profile-modal"),_=document.querySelector(".profile__edit-button"),m=u.querySelector(".modal__close-button"),h=u.querySelector(".modal__form"),v=document.querySelector("#profile-name-input"),p=document.querySelector("#profile-description-input"),S=document.querySelector("#new-post-modal"),y=document.querySelector(".profile__add-button"),f=S.querySelector(".modal__close-button"),b=S.querySelector(".modal__form"),q=document.querySelector("#card-image-input"),E=document.querySelector("#caption-description-input"),L=document.querySelector("#preview-modal"),k=L.querySelector(".modal__close-button"),C=L.querySelector(".modal__image"),g=L.querySelector(".modal__caption"),U=document.querySelector(".modal__button"),$=document.querySelector("#edit-avatar-modal"),x=$.querySelector(".modal__form"),I=($.querySelector(".modal__button"),$.querySelector(".modal__close-button")),A=$.querySelector("#avatar-name-input"),R=document.querySelector(".profile__avatar-edit-btn"),w=document.querySelector("#delete-modal"),T=w.querySelector(".modal__close-button"),D=document.querySelector("#delete-cancel-button");let B=null,P=null;const j=w.querySelector(".modal__button_type_delete");function N(e){e.classList.add("modal_is-opened"),document.addEventListener("keydown",J),e.addEventListener("mousedown",O)}function H(e){e.classList.remove("modal_is-opened"),document.removeEventListener("keydown",J),e.removeEventListener("mousedown",O)}function J(e){"Escape"===e.key&&H(document.querySelector(".modal_is-opened"))}function O(e){e.target===e.currentTarget&&H(e.target)}function z(e){const t=c.cloneNode(!0),r=t.querySelector(".card__title"),o=t.querySelector(".card__image"),n=t.querySelector(".card__like-button"),s=t.querySelector(".card__delete-button");return o.src=e.link,o.alt=e.name,r.textContent=e.name,n.addEventListener("click",()=>{n.classList.contains("card__like-button_active")?a.unlikeCard(e._id).then(()=>{n.classList.remove("card__like-button_active")}).catch(console.error):a.likeCard(e._id).then(()=>{n.classList.add("card__like-button_active")}).catch(console.error)}),s.addEventListener("click",()=>function(e,t){P=e,B=t._id,N(w)}(t,e)),o.addEventListener("click",()=>{C.src=e.link,C.alt=e.name,g.textContent=e.name,N(L)}),e.isLiked&&n.classList.add("card__like-button_active"),t}var F;_.addEventListener("click",()=>{v.value=l.textContent,p.value=d.textContent;const e=[v,p],t=h.querySelector(".modal__button");o(h,e,t,n),N(u)}),m.addEventListener("click",()=>H(u)),h.addEventListener("submit",function(e){e.preventDefault(),a.editUserInfo({name:v.value,about:p.value}).then(e=>{l.textContent=e.name,d.textContent=e.about,H(u)}).catch(e=>{console.error(e)})}),y.addEventListener("click",()=>{const e=[q,E],t=b.querySelector(".modal__button");o(b,e,t,n),N(S)}),f.addEventListener("click",()=>H(S)),b.addEventListener("submit",function(e){e.preventDefault();const t=z({name:E.value,link:q.value});s.prepend(t),e.target.reset(),r(U,n),H(S)}),k.addEventListener("click",()=>{H(L)}),R.addEventListener("click",()=>N($)),I.addEventListener("click",()=>H($)),x.addEventListener("submit",function(e){e.preventDefault(),a.editAvatarInfo({avatar:A.value}).then(e=>{i.src=e.avatar,H($)}).catch(console.error)}),T.addEventListener("click",()=>H(w)),D.addEventListener("click",()=>H(w)),j.addEventListener("click",function(e){e.preventDefault(),a.deleteCard(B).then(()=>{P&&P.remove(),H(w)}).catch(e=>{console.error("Failed to delete card:",e)})}),a.getAppInfo().then(([e,t])=>{e.forEach(e=>{const t=z(e);s.append(t)}),i.src=t.avatar,l.textContent=t.name,d.textContent=t.about}).catch(e=>{console.error(e)}),F=n,document.querySelectorAll(F.formSelector).forEach(r=>{((r,o)=>{const n=Array.from(r.querySelectorAll(o.inputSelector)),a=r.querySelector(o.submitButtonSelector);t(n,a,o),n.forEach(s=>{s.addEventListener("input",function(){((t,r,o)=>{r.validity.valid?e(t,r,o):((e,t,r,o)=>{const n=t.id+"-error";e.querySelector("#"+n).textContent=r,t.classList.add(o.inputErrorClass)})(t,r,r.validationMessage,o)})(r,s,o),t(n,a,o)})})})(r,F)})}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,